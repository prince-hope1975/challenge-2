"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./context.tsx":
/*!*********************!*\
  !*** ./context.tsx ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AppProvider\": () => (/* binding */ AppProvider),\n/* harmony export */   \"useGlobalContext\": () => (/* binding */ useGlobalContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst AppContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createContext({});\nconst AppProvider = ({ children  })=>{\n    const { 0: state , 1: setState  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const { 0: wallet , 1: setWallet  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const { 0: showModal , 1: setShowModal  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { 0: data , 1: setData  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const { 0: modalMessage , 1: setModalMessage  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"Hello\");\n    const { 0: metadata , 1: setMetadata  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        id: 0,\n        img: \"\",\n        price: 0,\n        time_in_secs: 0,\n        desc: \"\",\n        owner: \"\",\n        previous_prices: []\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(state);\n    }, [\n        state\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AppContext.Provider, {\n        value: {\n            state,\n            setState,\n            wallet,\n            setWallet,\n            modalMessage,\n            setModalMessage,\n            showModal,\n            setShowModal,\n            metadata,\n            data,\n            setData,\n            // @ts-ignore\n            setMetadata\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/context.tsx\",\n        lineNumber: 60,\n        columnNumber: 5\n    }, undefined);\n};\nconst useGlobalContext = ()=>(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AppContext)\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb250ZXh0LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQU9lO0FBWWYsTUFBTUksVUFBVSxpQkFBR0osMERBQW1CLENBQ3BDLEVBQUUsQ0FtQkg7QUFDTSxNQUFNTSxXQUFXLEdBQUcsQ0FBQyxFQUFFQyxRQUFRLEdBQXFCLEdBQUs7SUFDOUQsTUFBTSxFQXpDUixHQXlDU0MsS0FBSyxHQXpDZCxHQXlDZ0JDLFFBQVEsTUFBSVAsK0NBQVEsQ0FBQyxFQUFFLENBQUM7SUFDdEMsTUFBTSxFQTFDUixHQTBDU1EsTUFBTSxHQTFDZixHQTBDaUJDLFNBQVMsTUFBSVQsK0NBQVEsQ0FBQyxFQUFFLENBQUM7SUFDeEMsTUFBTSxFQTNDUixHQTJDU1UsU0FBUyxHQTNDbEIsR0EyQ29CQyxZQUFZLE1BQUlYLCtDQUFRLENBQUMsS0FBSyxDQUFDO0lBQ2pELE1BQU0sRUE1Q1IsR0E0Q1NZLElBQUksR0E1Q2IsR0E0Q2VDLE9BQU8sTUFBSWIsK0NBQVEsQ0FBQyxFQUFFLENBQUM7SUFDcEMsTUFBTSxFQTdDUixHQTZDU2MsWUFBWSxHQTdDckIsR0E2Q3VCQyxlQUFlLE1BQUlmLCtDQUFRLENBQUMsT0FBTyxDQUFRO0lBQ2hFLE1BQU0sRUE5Q1IsR0E4Q1NnQixRQUFRLEdBOUNqQixHQThDbUJDLFdBQVcsTUFBSWpCLCtDQUFRLENBQUM7UUFDdkNrQixFQUFFLEVBQUUsQ0FBQztRQUNMQyxHQUFHLEVBQUUsRUFBRTtRQUNQQyxLQUFLLEVBQUUsQ0FBQztRQUNSQyxZQUFZLEVBQUUsQ0FBQztRQUNmQyxJQUFJLEVBQUUsRUFBRTtRQUNSQyxLQUFLLEVBQUUsRUFBRTtRQUNUQyxlQUFlLEVBQUUsRUFBRTtLQUNwQixDQUFDO0lBQ0Z2QixnREFBUyxDQUFDLElBQU07UUFDZHdCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDcEIsS0FBSyxDQUFDLENBQUM7S0FDcEIsRUFBRTtRQUFDQSxLQUFLO0tBQUMsQ0FBQyxDQUFDO0lBQ1oscUJBQ0UsOERBQUNKLFVBQVUsQ0FBQ3lCLFFBQVE7UUFDbEJDLEtBQUssRUFBRTtZQUNMdEIsS0FBSztZQUNMQyxRQUFRO1lBQ1JDLE1BQU07WUFDTkMsU0FBUztZQUNUSyxZQUFZO1lBQ1pDLGVBQWU7WUFDZkwsU0FBUztZQUNUQyxZQUFZO1lBQ1pLLFFBQVE7WUFDUkosSUFBSTtZQUNKQyxPQUFPO1lBQ1AsYUFBYTtZQUNiSSxXQUFXO1NBQ1o7a0JBRUFaLFFBQVE7Ozs7O2lCQUNXLENBQ3RCO0NBQ0gsQ0FBQztBQUNLLE1BQU13QixnQkFBZ0IsR0FBRyxJQUFNOUIsaURBQVUsQ0FBQ0csVUFBVSxDQUFDO0FBQUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2FsZ29oYWNrLy4vY29udGV4dC50c3g/NDdlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtcbiAgUHJvcHNXaXRoQ2hpbGRyZW4sXG4gIHVzZUNvbnRleHQsXG4gIHVzZVN0YXRlLFxuICAvLyB1c2VSZWR1Y2VyLFxuICB1c2VFZmZlY3QsXG4gIC8vICAgRGlzcGF0Y2hXaXRob3V0QWN0aW9uLFxufSBmcm9tIFwicmVhY3RcIjtcbmV4cG9ydCB0eXBlIG1ldGEgPSB7XG4gIGlkOiBudW1iZXI7XG4gIGltZzogc3RyaW5nO1xuICBwcmljZTogbnVtYmVyO1xuICB0aW1lX2luX3NlY3M6IG51bWJlcjtcbiAgZGVzYzogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBvd25lcjogc3RyaW5nO1xuICBwcmV2aW91c19wcmljZXM6IG51bWJlcltdO1xuICBjb250cmFjdEluZm8/OiBhbnk7XG59O1xuXG5jb25zdCBBcHBDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChcbiAge30gYXMge1xuICAgIGRpc3BhdGNoOiBSZWFjdC5EaXNwYXRjaDx7XG4gICAgICB0eXBlOiBcIlNFVF9GQUxMQkFDS1wiO1xuICAgICAgcGF5bG9hZDogXCJteWFsZ29cIiB8IFwicGVyYVwiO1xuICAgIH0+O1xuICAgIHN0YXRlOiBhbnk7XG4gICAgc2hvd01vZGFsOiBib29sZWFuO1xuICAgIHNldFNob3dNb2RhbDogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248Ym9vbGVhbj4+O1xuICAgIHNldFN0YXRlOiBSZWFjdC5EaXNwYXRjaDxSZWFjdC5TZXRTdGF0ZUFjdGlvbjx7fT4+O1xuICAgIHdhbGxldDogYW55O1xuICAgIHNldFdhbGxldDogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248e30+PjtcbiAgICBhcHBTdGF0ZToge1xuICAgICAgZmFsbGJhY2s6IG51bGwgfCBcIm15YWxnb1wiIHwgXCJwZXJhXCI7XG4gICAgfTtcbiAgICBtb2RhbE1lc3NhZ2U6IGFueTtcbiAgICBzZXRNb2RhbE1lc3NhZ2U6IFJlYWN0LkRpc3BhdGNoPGFueT47XG4gICAgbWV0YWRhdGE6IG1ldGE7XG4gICAgc2V0TWV0YWRhdGE6IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPG1ldGE+PjtcbiAgfVxuKTtcbmV4cG9ydCBjb25zdCBBcHBQcm92aWRlciA9ICh7IGNoaWxkcmVuIH06IFByb3BzV2l0aENoaWxkcmVuKSA9PiB7XG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoe30pO1xuICBjb25zdCBbd2FsbGV0LCBzZXRXYWxsZXRdID0gdXNlU3RhdGUoe30pO1xuICBjb25zdCBbc2hvd01vZGFsLCBzZXRTaG93TW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbZGF0YSwgc2V0RGF0YV0gPSB1c2VTdGF0ZSh7fSk7XG4gIGNvbnN0IFttb2RhbE1lc3NhZ2UsIHNldE1vZGFsTWVzc2FnZV0gPSB1c2VTdGF0ZShcIkhlbGxvXCIgYXMgYW55KTtcbiAgY29uc3QgW21ldGFkYXRhLCBzZXRNZXRhZGF0YV0gPSB1c2VTdGF0ZSh7XG4gICAgaWQ6IDAsXG4gICAgaW1nOiBcIlwiLFxuICAgIHByaWNlOiAwLFxuICAgIHRpbWVfaW5fc2VjczogMCxcbiAgICBkZXNjOiBcIlwiLFxuICAgIG93bmVyOiBcIlwiLFxuICAgIHByZXZpb3VzX3ByaWNlczogW10sXG4gIH0pO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKHN0YXRlKTtcbiAgfSwgW3N0YXRlXSk7XG4gIHJldHVybiAoXG4gICAgPEFwcENvbnRleHQuUHJvdmlkZXJcbiAgICAgIHZhbHVlPXt7XG4gICAgICAgIHN0YXRlLFxuICAgICAgICBzZXRTdGF0ZSxcbiAgICAgICAgd2FsbGV0LFxuICAgICAgICBzZXRXYWxsZXQsXG4gICAgICAgIG1vZGFsTWVzc2FnZSxcbiAgICAgICAgc2V0TW9kYWxNZXNzYWdlLFxuICAgICAgICBzaG93TW9kYWwsXG4gICAgICAgIHNldFNob3dNb2RhbCxcbiAgICAgICAgbWV0YWRhdGEsXG4gICAgICAgIGRhdGEsXG4gICAgICAgIHNldERhdGEsXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgc2V0TWV0YWRhdGEsXG4gICAgICB9fVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0FwcENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuZXhwb3J0IGNvbnN0IHVzZUdsb2JhbENvbnRleHQgPSAoKSA9PiB1c2VDb250ZXh0KEFwcENvbnRleHQpO1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlQ29udGV4dCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiQXBwQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJBcHBQcm92aWRlciIsImNoaWxkcmVuIiwic3RhdGUiLCJzZXRTdGF0ZSIsIndhbGxldCIsInNldFdhbGxldCIsInNob3dNb2RhbCIsInNldFNob3dNb2RhbCIsImRhdGEiLCJzZXREYXRhIiwibW9kYWxNZXNzYWdlIiwic2V0TW9kYWxNZXNzYWdlIiwibWV0YWRhdGEiLCJzZXRNZXRhZGF0YSIsImlkIiwiaW1nIiwicHJpY2UiLCJ0aW1lX2luX3NlY3MiLCJkZXNjIiwib3duZXIiLCJwcmV2aW91c19wcmljZXMiLCJjb25zb2xlIiwibG9nIiwiUHJvdmlkZXIiLCJ2YWx1ZSIsInVzZUdsb2JhbENvbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./context.tsx\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _reach_sh_stdlib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @reach-sh/stdlib */ \"@reach-sh/stdlib\");\n/* harmony import */ var _reach_sh_stdlib__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_reach_sh_stdlib__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _build_index_main_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../build/index.main.mjs */ \"./build/index.main.mjs\");\n/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context */ \"./context.tsx\");\n/* harmony import */ var react_icons_im__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-icons/im */ \"react-icons/im\");\n/* harmony import */ var react_icons_im__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_icons_im__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\n\nconst assetId = {\n    _hex: \"0x05f2353e\",\n    _isBigNumber: true\n};\nconst contractInfo = {\n    _hex: \"0x05f23bb1\",\n    _isBigNumber: true\n};\nconst reach = (0,_reach_sh_stdlib__WEBPACK_IMPORTED_MODULE_2__.loadStdlib)(process.env.REACH_CONNECTOR_MODE = \"ALGO\");\nreach.setWalletFallback(reach.walletFallback({\n    providerEnv: \"TestNet\",\n    WalletConnect: _reach_sh_stdlib__WEBPACK_IMPORTED_MODULE_2__.ALGO_WalletConnect\n}));\nconst App = ()=>{\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const whitelistSpot = window.localStorage.getItem(\"whitelistSpot\");\n        if (!whitelistSpot) {\n            window.localStorage.setItem(\"whitelistSpot\", \"?\");\n        }\n        const spot = window.localStorage.getItem(\"whitelistSpot\");\n        setSpot(spot);\n    }, []);\n    const { 0: wallet , 1: setWallet  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const { 0: token1 , 1: setToken  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const { 0: mySpot , 1: setSpot  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)( false || null);\n    const { 0: isConnected , 1: setIsConnected  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { setModalMessage , setShowModal  } = (0,_context__WEBPACK_IMPORTED_MODULE_4__.useGlobalContext)();\n    const displayMessage = (show, message)=>{\n        setShowModal(show);\n        setModalMessage(message);\n    };\n    const deploy = async ()=>{\n        const ctcDeployer = wallet?.contract(_build_index_main_mjs__WEBPACK_IMPORTED_MODULE_3__);\n        try {\n            await Promise.all([\n                _build_index_main_mjs__WEBPACK_IMPORTED_MODULE_3__.Deployer(ctcDeployer, {\n                    // @ts-ignore\n                    token: reach.bigNumberToNumber(assetId),\n                    bal: await wallet.balanceOf(assetId),\n                    inform: ()=>{\n                        console.log(\"contract has been initialized and is working fine\");\n                        throw 42;\n                    }\n                }), \n            ]);\n            console.log(await ctcDeployer.getInfo());\n        } catch (error) {\n            if (error !== 42) console.log(error);\n            console.log(await ctcDeployer.getInfo());\n        }\n        console.log(await ctcDeployer.getInfo());\n    };\n    const createToken = async ()=>{\n        const token = await reach.launchToken(wallet, \"Reach\", \"RCH\");\n        setToken(token);\n        console.log(token);\n    };\n    const whitelist = async ()=>{\n        try {\n            console.log(\"Attaching to contract\");\n            displayMessage(true, /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Loading, {\n                text: \"opting into asset Please wait\"\n            }, void 0, false, {\n                fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n                lineNumber: 71,\n                columnNumber: 28\n            }, undefined));\n            // @ts-ignore\n            const optin = await wallet.tokenAccept(reach.bigNumberToNumber(assetId));\n            displayMessage(false);\n            const ctc = wallet.contract(_build_index_main_mjs__WEBPACK_IMPORTED_MODULE_3__, reach.bigNumberToNumber(contractInfo));\n            displayMessage(true, /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Loading, {\n                text: \"Checking if whitelist is available\"\n            }, void 0, false, {\n                fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n                lineNumber: 81,\n                columnNumber: 9\n            }, undefined));\n            const accc = await ctc.apis.Users.whitelist();\n            console.log(\"\\nBalance in wallet\", // @ts-ignore\n            reach.formatCurrency(await reach.balanceOf(wallet)), \"Algo\\n\");\n            displayMessage(true, /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Loading, {\n                text: \"Successfully whitelisted\"\n            }, void 0, false, {\n                fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n                lineNumber: 93,\n                columnNumber: 10\n            }, undefined));\n            setSpot(accc);\n        } catch (error) {\n            displayMessage(true, /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Loading, {\n                error: true,\n                text: \"An error occured, Unable to whitelist\"\n            }, void 0, false, {\n                fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n                lineNumber: 98,\n                columnNumber: 26\n            }, undefined));\n            console.log(error);\n        }\n    };\n    const connectWallet = async ()=>{\n        try {\n            const acct = await reach.getDefaultAccount();\n            setWallet(acct);\n            setIsConnected(true);\n            console.log(acct);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n    const Loading = ({ text , error  })=>{\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: `flex flex-col items-center gap-4 w-full h-full p-3 ${error ? \"bg-red-500 rounded text-white\" : \"\"}`,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_im__WEBPACK_IMPORTED_MODULE_5__.ImSpinner2, {\n                    className: \"animate-spin text-2xl\"\n                }, void 0, false, {\n                    fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n                    lineNumber: 117,\n                    columnNumber: 9\n                }, undefined),\n                text\n            ]\n        }, void 0, true, {\n            fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n            lineNumber: 116,\n            columnNumber: 7\n        }, undefined);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-screen h-screen bg-gray-100 flex gap-4\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                className: \"w-full h-[4rem] p-2 left-0 m-0 bg-white shadow-md flex items-center fixed bg-gradient-to-l from-indigo-500 to-white justify-between text-white text-lg uppercase cursor-pointer \",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                        src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSA-pD2YlOth1fNEMAZJeWBJaP6kGH8KVVagQ&usqp=CAU\",\n                        alt: \"whitelistdapp\",\n                        className: \"w-14 h-14 \"\n                    }, void 0, false, {\n                        fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n                        lineNumber: 126,\n                        columnNumber: 9\n                    }, undefined),\n                    isConnected ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-white text-purple-700 py-2 px-3 hover:bg-slate-100 rounded shadow-sm\",\n                        children: [\n                            \"WhiteList Dapp\",\n                            \" \"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n                        lineNumber: 132,\n                        columnNumber: 11\n                    }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        onClick: connectWallet,\n                        className: \"bg-white text-purple-700 py-2 px-3 hover:bg-slate-100 rounded shadow-sm\",\n                        children: [\n                            \"Connect\",\n                            \" \"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n                        lineNumber: 136,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n                lineNumber: 125,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-full h-full flex flex-col items-center justify-center bg-center bg-cover gap-14\",\n                style: {\n                    backgroundImage: `url(\"https://musictech.com/wp-content/uploads/2021/12/DistroKid-Sellouts@2000x1500.jpg\")`\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mx-3 text-purple-800 text-xl h-40 flex items-center px-5 rounded-md shadow-xl bg-white/70 backdrop-blur-sm capitalize\",\n                        children: [\n                            \" \",\n                            mySpot,\n                            \" / 5 spots Available, try your luck\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n                        lineNumber: 151,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"p-3 rounded text-white font-bold text-lg animate-bounce bg-gradient-to-r from-green-400 to-blue-500 hover:from-pink-500 hover:to-yellow-500\",\n                        onClick: whitelist,\n                        children: \"Click here Join Whitelist\"\n                    }, void 0, false, {\n                        fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n                        lineNumber: 155,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n                lineNumber: 144,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/prince/Documents/Reach/Reach challenge/challenge 2/list/pages/index.tsx\",\n        lineNumber: 124,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ }),

/***/ "@reach-sh/stdlib":
/*!***********************************!*\
  !*** external "@reach-sh/stdlib" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("@reach-sh/stdlib");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

module.exports = require("react");

/***/ }),

/***/ "react-icons/im":
/*!*********************************!*\
  !*** external "react-icons/im" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("react-icons/im");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "./build/index.main.mjs":
/*!******************************!*\
  !*** ./build/index.main.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Deployer\": () => (/* binding */ Deployer),\n/* harmony export */   \"Users_contractOver\": () => (/* binding */ Users_contractOver),\n/* harmony export */   \"Users_whitelist\": () => (/* binding */ Users_whitelist),\n/* harmony export */   \"_APIs\": () => (/* binding */ _APIs),\n/* harmony export */   \"_Connectors\": () => (/* binding */ _Connectors),\n/* harmony export */   \"_Participants\": () => (/* binding */ _Participants),\n/* harmony export */   \"_Users_contractOver4\": () => (/* binding */ _Users_contractOver4),\n/* harmony export */   \"_Users_whitelist4\": () => (/* binding */ _Users_whitelist4),\n/* harmony export */   \"_backendVersion\": () => (/* binding */ _backendVersion),\n/* harmony export */   \"_getEvents\": () => (/* binding */ _getEvents),\n/* harmony export */   \"_getMaps\": () => (/* binding */ _getMaps),\n/* harmony export */   \"_getViews\": () => (/* binding */ _getViews),\n/* harmony export */   \"_stateSourceMap\": () => (/* binding */ _stateSourceMap),\n/* harmony export */   \"_version\": () => (/* binding */ _version),\n/* harmony export */   \"_versionHash\": () => (/* binding */ _versionHash),\n/* harmony export */   \"getExports\": () => (/* binding */ getExports)\n/* harmony export */ });\n// Automatically generated with Reach 0.1.11 (578589af)\n/* eslint-disable */ const _version = \"0.1.11\";\nconst _versionHash = \"0.1.11 (578589af)\";\nconst _backendVersion = 17;\nfunction getExports(s) {\n    const stdlib = s.reachStdlib;\n    return {};\n}\n;\nfunction _getEvents(s) {\n    const stdlib = s.reachStdlib;\n    return {};\n}\n;\nfunction _getViews(s, viewlib) {\n    const stdlib = s.reachStdlib;\n    const ctc0 = stdlib.T_Address;\n    const ctc1 = stdlib.T_Token;\n    const ctc2 = stdlib.T_UInt;\n    const ctc3 = stdlib.T_Bool;\n    const ctc4 = stdlib.T_Tuple([\n        ctc2,\n        ctc2,\n        ctc3\n    ]);\n    const ctc5 = stdlib.T_Array(ctc4, stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"1\"));\n    const ctc6 = stdlib.T_Array(ctc0, stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"5\"));\n    const ctc7 = stdlib.T_Null;\n    const ctc8 = stdlib.T_Data({\n        None: ctc7,\n        Some: ctc7\n    });\n    const map0_ctc = ctc8;\n    return {\n        infos: {},\n        views: {\n            1: [\n                ctc0,\n                ctc1,\n                ctc2,\n                ctc5\n            ],\n            4: [\n                ctc0,\n                ctc1,\n                ctc3,\n                ctc2,\n                ctc6,\n                ctc5,\n                ctc2,\n                ctc2\n            ]\n        }\n    };\n}\n;\nfunction _getMaps(s) {\n    const stdlib = s.reachStdlib;\n    const ctc0 = stdlib.T_Null;\n    const ctc1 = stdlib.T_Data({\n        None: ctc0,\n        Some: ctc0\n    });\n    const ctc2 = stdlib.T_Tuple([\n        ctc1\n    ]);\n    return {\n        mapDataTy: ctc2\n    };\n}\n;\nasync function Deployer(ctcTop, interact) {\n    if (typeof ctcTop !== \"object\" || ctcTop._initialize === undefined) {\n        return Promise.reject(new Error(`The backend for Deployer expects to receive a contract as its first argument.`));\n    }\n    if (typeof interact !== \"object\") {\n        return Promise.reject(new Error(`The backend for Deployer expects to receive an interact object as its second argument.`));\n    }\n    const ctc = ctcTop._initialize();\n    const stdlib = ctc.stdlib;\n    const ctc0 = stdlib.T_Null;\n    const ctc1 = stdlib.T_Data({\n        None: ctc0,\n        Some: ctc0\n    });\n    const ctc2 = stdlib.T_UInt;\n    const ctc3 = stdlib.T_Token;\n    const ctc4 = stdlib.T_Tuple([]);\n    const ctc5 = stdlib.T_Bool;\n    const ctc6 = stdlib.T_Address;\n    const ctc7 = stdlib.T_Tuple([\n        ctc2,\n        ctc2,\n        ctc5\n    ]);\n    const ctc8 = stdlib.T_Array(ctc7, stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"1\"));\n    const map0_ctc = ctc1;\n    const map0 = stdlib.newMap({\n        ctc: ctc,\n        idx: 0,\n        isAPI: false,\n        ty: map0_ctc\n    });\n    const v327 = [\n        stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"0\"),\n        stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"0\"),\n        false\n    ];\n    const v328 = [\n        v327\n    ];\n    const v332 = stdlib.protect(ctc2, interact.bal, \"for Deployer's interact field bal\");\n    const v333 = stdlib.protect(ctc3, interact.token, \"for Deployer's interact field token\");\n    const txn11 = await ctc.sendrecv({\n        args: [\n            v333,\n            v332\n        ],\n        evt_cnt: 2,\n        funcNum: 0,\n        lct: stdlib.checkedBigNumberify(\"./index.rsh:21:5:dot\", stdlib.UInt_max, \"0\"),\n        onlyIf: true,\n        out_tys: [\n            ctc3,\n            ctc2\n        ],\n        pay: [\n            stdlib.checkedBigNumberify(\"./index.rsh:21:5:decimal\", stdlib.UInt_max, \"0\"),\n            []\n        ],\n        sim_p: async (txn1)=>{\n            const sim_r = {\n                txns: [],\n                mapRefs: [],\n                maps: []\n            };\n            let sim_txn_ctr = stdlib.UInt_max;\n            const getSimTokCtr = ()=>{\n                sim_txn_ctr = sim_txn_ctr.sub(1);\n                return sim_txn_ctr;\n            };\n            stdlib.simMapDupe(sim_r, 0, map0);\n            const { data: [v337, v338] , secs: v340 , time: v339 , didSend: v29 , from: v336  } = txn1;\n            const v341 = v328[stdlib.checkedBigNumberify(\"./index.rsh:21:5:dot\", stdlib.UInt_max, \"0\")];\n            const v343 = v341[stdlib.checkedBigNumberify(\"./index.rsh:21:5:dot\", stdlib.UInt_max, \"1\")];\n            const v344 = v341[stdlib.checkedBigNumberify(\"./index.rsh:21:5:dot\", stdlib.UInt_max, \"2\")];\n            const v345 = [\n                stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"0\"),\n                v343,\n                v344\n            ];\n            const v346 = stdlib.Array_set(v328, stdlib.checkedBigNumberify(\"./index.rsh:21:5:dot\", stdlib.UInt_max, \"0\"), v345);\n            sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"0\"),\n                kind: \"init\",\n                tok: v337\n            });\n            ;\n            sim_r.isHalt = false;\n            return sim_r;\n        },\n        soloSend: true,\n        timeoutAt: undefined /* mto */ ,\n        tys: [\n            ctc3,\n            ctc2\n        ],\n        waitIfNotPresent: false\n    });\n    const { data: [v3371, v338] , secs: v340 , time: v339 , didSend: v29 , from: v336  } = txn11;\n    const v3411 = v328[stdlib.checkedBigNumberify(\"./index.rsh:21:5:dot\", stdlib.UInt_max, \"0\")];\n    const v3431 = v3411[stdlib.checkedBigNumberify(\"./index.rsh:21:5:dot\", stdlib.UInt_max, \"1\")];\n    const v3441 = v3411[stdlib.checkedBigNumberify(\"./index.rsh:21:5:dot\", stdlib.UInt_max, \"2\")];\n    const v3451 = [\n        stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"0\"),\n        v3431,\n        v3441\n    ];\n    const v346 = stdlib.Array_set(v328, stdlib.checkedBigNumberify(\"./index.rsh:21:5:dot\", stdlib.UInt_max, \"0\"), v3451);\n    ;\n    ;\n    const txn21 = await ctc.sendrecv({\n        args: [\n            v336,\n            v3371,\n            v338,\n            v346\n        ],\n        evt_cnt: 0,\n        funcNum: 1,\n        lct: v339,\n        onlyIf: true,\n        out_tys: [],\n        pay: [\n            stdlib.checkedBigNumberify(\"./index.rsh:23:5:dot\", stdlib.UInt_max, \"0\"),\n            [\n                [\n                    v338,\n                    v3371\n                ]\n            ]\n        ],\n        sim_p: async (txn2)=>{\n            const sim_r = {\n                txns: [],\n                mapRefs: [],\n                maps: []\n            };\n            let sim_txn_ctr = stdlib.UInt_max;\n            const getSimTokCtr = ()=>{\n                sim_txn_ctr = sim_txn_ctr.sub(1);\n                return sim_txn_ctr;\n            };\n            stdlib.simMapDupe(sim_r, 0, map0);\n            const { data: [] , secs: v350 , time: v349 , didSend: v36 , from: v348  } = txn2;\n            ;\n            const v351 = v346[stdlib.checkedBigNumberify(\"./index.rsh:23:5:dot\", stdlib.UInt_max, \"0\")];\n            const v352 = v351[stdlib.checkedBigNumberify(\"./index.rsh:23:5:dot\", stdlib.UInt_max, \"0\")];\n            const v353 = stdlib.add(v352, v338);\n            const v356 = v351[stdlib.checkedBigNumberify(\"./index.rsh:23:5:dot\", stdlib.UInt_max, \"1\")];\n            const v357 = v351[stdlib.checkedBigNumberify(\"./index.rsh:23:5:dot\", stdlib.UInt_max, \"2\")];\n            const v358 = [\n                v353,\n                v356,\n                v357\n            ];\n            const v359 = stdlib.Array_set(v346, stdlib.checkedBigNumberify(\"./index.rsh:23:5:dot\", stdlib.UInt_max, \"0\"), v358);\n            sim_r.txns.push({\n                amt: v338,\n                kind: \"to\",\n                tok: v3371\n            });\n            const v364 = [\n                v336,\n                v336,\n                v336,\n                v336,\n                v336\n            ];\n            const v366 = true;\n            const v367 = stdlib.checkedBigNumberify(\"./index.rsh:30:63:decimal\", stdlib.UInt_max, \"0\");\n            const v368 = v364;\n            const v369 = v349;\n            const v375 = v359;\n            const v376 = stdlib.checkedBigNumberify(\"./index.rsh:15:9:after expr stmt semicolon\", stdlib.UInt_max, \"0\");\n            if (await (async ()=>{\n                const v379 = stdlib.lt(v367, stdlib.checkedBigNumberify(\"./index.rsh:32:33:decimal\", stdlib.UInt_max, \"4\"));\n                const v380 = v366 ? v379 : false;\n                return v380;\n            })()) {\n                const v387 = stdlib.add(v369, stdlib.checkedBigNumberify(\"./index.rsh:50:27:decimal\", stdlib.UInt_max, \"2500\"));\n                sim_r.isHalt = false;\n            } else {\n                const v429 = v375[stdlib.checkedBigNumberify(\"./index.rsh:55:24:application\", stdlib.UInt_max, \"0\")];\n                const v430 = v429[stdlib.checkedBigNumberify(\"./index.rsh:55:24:application\", stdlib.UInt_max, \"0\")];\n                const v431 = stdlib.div(v430, stdlib.checkedBigNumberify(\"./index.rsh:55:34:decimal\", stdlib.UInt_max, \"5\"));\n                const v432 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"0\")];\n                const v433 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"1\")];\n                const v434 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"2\")];\n                const v435 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"3\")];\n                const v436 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"4\")];\n                const v442 = stdlib.sub(v430, v431);\n                const v445 = v429[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n                const v446 = v429[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n                const v447 = [\n                    v442,\n                    v445,\n                    v446\n                ];\n                const v448 = stdlib.Array_set(v375, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v447);\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v432,\n                    tok: v3371\n                });\n                const v449 = v448[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v450 = v449[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v454 = stdlib.sub(v450, v431);\n                const v457 = v449[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n                const v458 = v449[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n                const v459 = [\n                    v454,\n                    v457,\n                    v458\n                ];\n                const v460 = stdlib.Array_set(v448, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v459);\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v433,\n                    tok: v3371\n                });\n                const v461 = v460[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v462 = v461[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v466 = stdlib.sub(v462, v431);\n                const v469 = v461[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n                const v470 = v461[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n                const v471 = [\n                    v466,\n                    v469,\n                    v470\n                ];\n                const v472 = stdlib.Array_set(v460, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v471);\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v434,\n                    tok: v3371\n                });\n                const v473 = v472[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v474 = v473[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v478 = stdlib.sub(v474, v431);\n                const v481 = v473[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n                const v482 = v473[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n                const v483 = [\n                    v478,\n                    v481,\n                    v482\n                ];\n                const v484 = stdlib.Array_set(v472, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v483);\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v435,\n                    tok: v3371\n                });\n                const v485 = v484[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v486 = v485[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v490 = stdlib.sub(v486, v431);\n                const v493 = v485[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n                const v494 = v485[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n                const v495 = [\n                    v490,\n                    v493,\n                    v494\n                ];\n                const v496 = stdlib.Array_set(v484, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v495);\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v436,\n                    tok: v3371\n                });\n                const v497 = v496[stdlib.checkedBigNumberify(\"./index.rsh:63:21:application\", stdlib.UInt_max, \"0\")];\n                const v498 = v497[stdlib.checkedBigNumberify(\"./index.rsh:63:21:application\", stdlib.UInt_max, \"0\")];\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v336,\n                    tok: v3371\n                });\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v336,\n                    tok: undefined /* Nothing */ \n                });\n                sim_r.txns.push({\n                    kind: \"halt\",\n                    tok: v3371\n                });\n                sim_r.txns.push({\n                    kind: \"halt\",\n                    tok: undefined /* Nothing */ \n                });\n                sim_r.isHalt = true;\n            }\n            return sim_r;\n        },\n        soloSend: true,\n        timeoutAt: undefined /* mto */ ,\n        tys: [\n            ctc6,\n            ctc3,\n            ctc2,\n            ctc8\n        ],\n        waitIfNotPresent: false\n    });\n    const { data: [] , secs: v350 , time: v3491 , didSend: v36 , from: v348  } = txn21;\n    ;\n    const v3511 = v346[stdlib.checkedBigNumberify(\"./index.rsh:23:5:dot\", stdlib.UInt_max, \"0\")];\n    const v3521 = v3511[stdlib.checkedBigNumberify(\"./index.rsh:23:5:dot\", stdlib.UInt_max, \"0\")];\n    const v3531 = stdlib.add(v3521, v338);\n    const v3561 = v3511[stdlib.checkedBigNumberify(\"./index.rsh:23:5:dot\", stdlib.UInt_max, \"1\")];\n    const v3571 = v3511[stdlib.checkedBigNumberify(\"./index.rsh:23:5:dot\", stdlib.UInt_max, \"2\")];\n    const v3581 = [\n        v3531,\n        v3561,\n        v3571\n    ];\n    const v3591 = stdlib.Array_set(v346, stdlib.checkedBigNumberify(\"./index.rsh:23:5:dot\", stdlib.UInt_max, \"0\"), v3581);\n    ;\n    const v360 = stdlib.addressEq(v336, v348);\n    stdlib.assert(v360, {\n        at: \"./index.rsh:23:5:dot\",\n        fs: [],\n        msg: \"sender correct\",\n        who: \"Deployer\"\n    });\n    stdlib.protect(ctc0, await interact.inform(), {\n        at: \"./index.rsh:24:20:application\",\n        fs: [\n            \"at ./index.rsh:24:20:application call to [unknown function] (defined at: ./index.rsh:24:20:function exp)\",\n            'at ./index.rsh:24:20:application call to \"liftedInteract\" (defined at: ./index.rsh:24:20:application)'\n        ],\n        msg: \"inform\",\n        who: \"Deployer\"\n    });\n    stdlib.protect(ctc0, await interact.inform(), {\n        at: \"./index.rsh:25:20:application\",\n        fs: [\n            \"at ./index.rsh:25:20:application call to [unknown function] (defined at: ./index.rsh:25:20:function exp)\",\n            'at ./index.rsh:25:20:application call to \"liftedInteract\" (defined at: ./index.rsh:25:20:application)'\n        ],\n        msg: \"inform\",\n        who: \"Deployer\"\n    });\n    const v3641 = [\n        v336,\n        v336,\n        v336,\n        v336,\n        v336\n    ];\n    let v3661 = true;\n    let v3671 = stdlib.checkedBigNumberify(\"./index.rsh:30:63:decimal\", stdlib.UInt_max, \"0\");\n    let v3681 = v3641;\n    let v3691 = v3491;\n    let v3751 = v3591;\n    let v376 = stdlib.checkedBigNumberify(\"./index.rsh:15:9:after expr stmt semicolon\", stdlib.UInt_max, \"0\");\n    while(await (async ()=>{\n        const v379 = stdlib.lt(v3671, stdlib.checkedBigNumberify(\"./index.rsh:32:33:decimal\", stdlib.UInt_max, \"4\"));\n        const v380 = v3661 ? v379 : false;\n        return v380;\n    })()){\n        const v387 = stdlib.add(v3691, stdlib.checkedBigNumberify(\"./index.rsh:50:27:decimal\", stdlib.UInt_max, \"2500\"));\n        const txn3 = await ctc.recv({\n            didSend: false,\n            evt_cnt: 1,\n            funcNum: 3,\n            out_tys: [\n                ctc4\n            ],\n            timeoutAt: [\n                \"time\",\n                v387\n            ],\n            waitIfNotPresent: false\n        });\n        if (txn3.didTimeout) {\n            const txn4 = await ctc.recv({\n                didSend: false,\n                evt_cnt: 1,\n                funcNum: 4,\n                out_tys: [\n                    ctc4\n                ],\n                timeoutAt: undefined /* mto */ ,\n                waitIfNotPresent: false\n            });\n            const { data: [v419] , secs: v421 , time: v420 , didSend: v179 , from: v418  } = txn4;\n            undefined /* setApiDetails */ ;\n            ;\n            const v422 = false;\n            await txn4.getOutput(\"Users_contractOver\", \"v422\", ctc5, v422);\n            const cv366 = false;\n            const cv367 = v3671;\n            const cv368 = v3681;\n            const cv369 = v420;\n            const cv375 = v3751;\n            const cv376 = v376;\n            v3661 = cv366;\n            v3671 = cv367;\n            v3681 = cv368;\n            v3691 = cv369;\n            v3751 = cv375;\n            v376 = cv376;\n            continue;\n        } else {\n            const { data: [v401] , secs: v403 , time: v402 , didSend: v144 , from: v400  } = txn3;\n            undefined /* setApiDetails */ ;\n            ;\n            await txn3.getOutput(\"Users_whitelist\", \"v367\", ctc2, v3671);\n            await stdlib.mapSet(map0, v400, null);\n            const v412 = stdlib.Array_set(v3681, v3671, v400);\n            const v413 = stdlib.add(v3671, stdlib.checkedBigNumberify(\"./index.rsh:47:36:decimal\", stdlib.UInt_max, \"1\"));\n            const cv366 = v3661;\n            const cv367 = v413;\n            const cv368 = v412;\n            const cv369 = v402;\n            const cv375 = v3751;\n            const cv376 = v376;\n            v3661 = cv366;\n            v3671 = cv367;\n            v3681 = cv368;\n            v3691 = cv369;\n            v3751 = cv375;\n            v376 = cv376;\n            continue;\n        }\n    }\n    const v4291 = v3751[stdlib.checkedBigNumberify(\"./index.rsh:55:24:application\", stdlib.UInt_max, \"0\")];\n    const v4301 = v4291[stdlib.checkedBigNumberify(\"./index.rsh:55:24:application\", stdlib.UInt_max, \"0\")];\n    const v4311 = stdlib.div(v4301, stdlib.checkedBigNumberify(\"./index.rsh:55:34:decimal\", stdlib.UInt_max, \"5\"));\n    const v4321 = v3681[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"0\")];\n    const v4331 = v3681[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"1\")];\n    const v4341 = v3681[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"2\")];\n    const v4351 = v3681[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"3\")];\n    const v4361 = v3681[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"4\")];\n    const v4421 = stdlib.sub(v4301, v4311);\n    const v4451 = v4291[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n    const v4461 = v4291[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n    const v4471 = [\n        v4421,\n        v4451,\n        v4461\n    ];\n    const v4481 = stdlib.Array_set(v3751, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v4471);\n    ;\n    const v4491 = v4481[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v4501 = v4491[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v4541 = stdlib.sub(v4501, v4311);\n    const v4571 = v4491[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n    const v4581 = v4491[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n    const v4591 = [\n        v4541,\n        v4571,\n        v4581\n    ];\n    const v4601 = stdlib.Array_set(v4481, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v4591);\n    ;\n    const v4611 = v4601[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v4621 = v4611[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v4661 = stdlib.sub(v4621, v4311);\n    const v4691 = v4611[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n    const v4701 = v4611[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n    const v4711 = [\n        v4661,\n        v4691,\n        v4701\n    ];\n    const v4721 = stdlib.Array_set(v4601, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v4711);\n    ;\n    const v4731 = v4721[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v4741 = v4731[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v4781 = stdlib.sub(v4741, v4311);\n    const v4811 = v4731[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n    const v4821 = v4731[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n    const v4831 = [\n        v4781,\n        v4811,\n        v4821\n    ];\n    const v4841 = stdlib.Array_set(v4721, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v4831);\n    ;\n    const v4851 = v4841[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v4861 = v4851[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v4901 = stdlib.sub(v4861, v4311);\n    const v4931 = v4851[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n    const v4941 = v4851[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n    const v4951 = [\n        v4901,\n        v4931,\n        v4941\n    ];\n    const v4961 = stdlib.Array_set(v4841, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v4951);\n    ;\n    const v4971 = v4961[stdlib.checkedBigNumberify(\"./index.rsh:63:21:application\", stdlib.UInt_max, \"0\")];\n    const v498 = v4971[stdlib.checkedBigNumberify(\"./index.rsh:63:21:application\", stdlib.UInt_max, \"0\")];\n    ;\n    ;\n    return;\n}\n;\nasync function _Users_contractOver4(ctcTop, interact) {\n    if (typeof ctcTop !== \"object\" || ctcTop._initialize === undefined) {\n        return Promise.reject(new Error(`The backend for _Users_contractOver4 expects to receive a contract as its first argument.`));\n    }\n    if (typeof interact !== \"object\") {\n        return Promise.reject(new Error(`The backend for _Users_contractOver4 expects to receive an interact object as its second argument.`));\n    }\n    const ctc = ctcTop._initialize();\n    const stdlib = ctc.stdlib;\n    const ctc0 = stdlib.T_Null;\n    const ctc1 = stdlib.T_Data({\n        None: ctc0,\n        Some: ctc0\n    });\n    const ctc2 = stdlib.T_Address;\n    const ctc3 = stdlib.T_Token;\n    const ctc4 = stdlib.T_Bool;\n    const ctc5 = stdlib.T_UInt;\n    const ctc6 = stdlib.T_Array(ctc2, stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"5\"));\n    const ctc7 = stdlib.T_Tuple([\n        ctc5,\n        ctc5,\n        ctc4\n    ]);\n    const ctc8 = stdlib.T_Array(ctc7, stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"1\"));\n    const ctc9 = stdlib.T_Tuple([]);\n    const map0_ctc = ctc1;\n    const map0 = stdlib.newMap({\n        ctc: ctc,\n        idx: 0,\n        isAPI: true,\n        ty: map0_ctc\n    });\n    const [v336, v337, v366, v367, v368, v375, v376, v387] = await ctc.getState(stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"4\"), [\n        ctc2,\n        ctc3,\n        ctc4,\n        ctc5,\n        ctc6,\n        ctc8,\n        ctc5,\n        ctc5\n    ]);\n    const v417 = stdlib.protect(ctc9, await interact.in(), {\n        at: \"./index.rsh:51:7:application\",\n        fs: [\n            \"at ./index.rsh:51:7:application call to [unknown function] (defined at: ./index.rsh:51:7:function exp)\",\n            \"at ./index.rsh:50:37:application call to [unknown function] (defined at: ./index.rsh:50:37:function exp)\"\n        ],\n        msg: \"in\",\n        who: \"Users_contractOver\"\n    });\n    const txn12 = await ctc.sendrecv({\n        args: [\n            v336,\n            v337,\n            v366,\n            v367,\n            v368,\n            v375,\n            v376,\n            v387,\n            v417\n        ],\n        evt_cnt: 1,\n        funcNum: 4,\n        lct: stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"0\"),\n        onlyIf: true,\n        out_tys: [\n            ctc9\n        ],\n        pay: [\n            stdlib.checkedBigNumberify(\"./index.rsh:51:7:decimal\", stdlib.UInt_max, \"0\"),\n            []\n        ],\n        sim_p: async (txn1)=>{\n            const sim_r = {\n                txns: [],\n                mapRefs: [],\n                maps: []\n            };\n            let sim_txn_ctr = stdlib.UInt_max;\n            const getSimTokCtr = ()=>{\n                sim_txn_ctr = sim_txn_ctr.sub(1);\n                return sim_txn_ctr;\n            };\n            stdlib.simMapDupe(sim_r, 0, map0);\n            const { data: [v419] , secs: v421 , time: v420 , didSend: v179 , from: v418  } = txn1;\n            sim_r.txns.push({\n                kind: \"api\",\n                who: \"Users_contractOver\"\n            });\n            ;\n            const v422 = false;\n            const v423 = await txn1.getOutput(\"Users_contractOver\", \"v422\", ctc4, v422);\n            const v639 = v375[stdlib.checkedBigNumberify(\"./index.rsh:55:24:application\", stdlib.UInt_max, \"0\")];\n            const v640 = v639[stdlib.checkedBigNumberify(\"./index.rsh:55:24:application\", stdlib.UInt_max, \"0\")];\n            const v641 = stdlib.div(v640, stdlib.checkedBigNumberify(\"./index.rsh:55:34:decimal\", stdlib.UInt_max, \"5\"));\n            const v642 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"0\")];\n            const v643 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"1\")];\n            const v644 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"2\")];\n            const v645 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"3\")];\n            const v646 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"4\")];\n            const v647 = stdlib.sub(v640, v641);\n            const v648 = v639[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n            const v649 = v639[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n            const v650 = [\n                v647,\n                v648,\n                v649\n            ];\n            const v651 = stdlib.Array_set(v375, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v650);\n            sim_r.txns.push({\n                kind: \"from\",\n                to: v642,\n                tok: v337\n            });\n            const v652 = v651[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n            const v653 = v652[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n            const v654 = stdlib.sub(v653, v641);\n            const v655 = v652[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n            const v656 = v652[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n            const v657 = [\n                v654,\n                v655,\n                v656\n            ];\n            const v658 = stdlib.Array_set(v651, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v657);\n            sim_r.txns.push({\n                kind: \"from\",\n                to: v643,\n                tok: v337\n            });\n            const v659 = v658[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n            const v660 = v659[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n            const v661 = stdlib.sub(v660, v641);\n            const v662 = v659[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n            const v663 = v659[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n            const v664 = [\n                v661,\n                v662,\n                v663\n            ];\n            const v665 = stdlib.Array_set(v658, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v664);\n            sim_r.txns.push({\n                kind: \"from\",\n                to: v644,\n                tok: v337\n            });\n            const v666 = v665[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n            const v667 = v666[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n            const v668 = stdlib.sub(v667, v641);\n            const v669 = v666[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n            const v670 = v666[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n            const v671 = [\n                v668,\n                v669,\n                v670\n            ];\n            const v672 = stdlib.Array_set(v665, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v671);\n            sim_r.txns.push({\n                kind: \"from\",\n                to: v645,\n                tok: v337\n            });\n            const v673 = v672[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n            const v674 = v673[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n            const v675 = stdlib.sub(v674, v641);\n            const v676 = v673[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n            const v677 = v673[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n            const v678 = [\n                v675,\n                v676,\n                v677\n            ];\n            const v679 = stdlib.Array_set(v672, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v678);\n            sim_r.txns.push({\n                kind: \"from\",\n                to: v646,\n                tok: v337\n            });\n            const v680 = v679[stdlib.checkedBigNumberify(\"./index.rsh:63:21:application\", stdlib.UInt_max, \"0\")];\n            const v681 = v680[stdlib.checkedBigNumberify(\"./index.rsh:63:21:application\", stdlib.UInt_max, \"0\")];\n            sim_r.txns.push({\n                kind: \"from\",\n                to: v336,\n                tok: v337\n            });\n            sim_r.txns.push({\n                kind: \"from\",\n                to: v336,\n                tok: undefined /* Nothing */ \n            });\n            sim_r.txns.push({\n                kind: \"halt\",\n                tok: v337\n            });\n            sim_r.txns.push({\n                kind: \"halt\",\n                tok: undefined /* Nothing */ \n            });\n            sim_r.isHalt = true;\n            return sim_r;\n        },\n        soloSend: false,\n        timeoutAt: undefined /* mto */ ,\n        tys: [\n            ctc2,\n            ctc3,\n            ctc4,\n            ctc5,\n            ctc6,\n            ctc8,\n            ctc5,\n            ctc5,\n            ctc9\n        ],\n        waitIfNotPresent: false\n    });\n    const { data: [v419] , secs: v421 , time: v420 , didSend: v179 , from: v418  } = txn12;\n    undefined /* setApiDetails */ ;\n    ;\n    const v4221 = false;\n    const v423 = await txn12.getOutput(\"Users_contractOver\", \"v422\", ctc4, v4221);\n    stdlib.protect(ctc0, await interact.out(v419, v423), {\n        at: \"./index.rsh:51:7:application\",\n        fs: [\n            \"at ./index.rsh:51:7:application call to [unknown function] (defined at: ./index.rsh:51:7:function exp)\",\n            'at ./index.rsh:52:8:application call to \"k\" (defined at: ./index.rsh:51:7:function exp)',\n            \"at ./index.rsh:50:37:application call to [unknown function] (defined at: ./index.rsh:50:37:function exp)\"\n        ],\n        msg: \"out\",\n        who: \"Users_contractOver\"\n    });\n    const v6391 = v375[stdlib.checkedBigNumberify(\"./index.rsh:55:24:application\", stdlib.UInt_max, \"0\")];\n    const v6401 = v6391[stdlib.checkedBigNumberify(\"./index.rsh:55:24:application\", stdlib.UInt_max, \"0\")];\n    const v6411 = stdlib.div(v6401, stdlib.checkedBigNumberify(\"./index.rsh:55:34:decimal\", stdlib.UInt_max, \"5\"));\n    const v6421 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"0\")];\n    const v6431 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"1\")];\n    const v6441 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"2\")];\n    const v6451 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"3\")];\n    const v6461 = v368[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"4\")];\n    const v6471 = stdlib.sub(v6401, v6411);\n    const v6481 = v6391[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n    const v6491 = v6391[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n    const v6501 = [\n        v6471,\n        v6481,\n        v6491\n    ];\n    const v6511 = stdlib.Array_set(v375, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v6501);\n    ;\n    const v6521 = v6511[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v6531 = v6521[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v6541 = stdlib.sub(v6531, v6411);\n    const v6551 = v6521[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n    const v6561 = v6521[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n    const v6571 = [\n        v6541,\n        v6551,\n        v6561\n    ];\n    const v6581 = stdlib.Array_set(v6511, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v6571);\n    ;\n    const v6591 = v6581[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v6601 = v6591[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v6611 = stdlib.sub(v6601, v6411);\n    const v6621 = v6591[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n    const v6631 = v6591[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n    const v6641 = [\n        v6611,\n        v6621,\n        v6631\n    ];\n    const v6651 = stdlib.Array_set(v6581, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v6641);\n    ;\n    const v6661 = v6651[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v6671 = v6661[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v6681 = stdlib.sub(v6671, v6411);\n    const v6691 = v6661[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n    const v6701 = v6661[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n    const v6711 = [\n        v6681,\n        v6691,\n        v6701\n    ];\n    const v6721 = stdlib.Array_set(v6651, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v6711);\n    ;\n    const v6731 = v6721[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v6741 = v6731[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n    const v6751 = stdlib.sub(v6741, v6411);\n    const v6761 = v6731[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n    const v6771 = v6731[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n    const v6781 = [\n        v6751,\n        v6761,\n        v6771\n    ];\n    const v6791 = stdlib.Array_set(v6721, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v6781);\n    ;\n    const v6801 = v6791[stdlib.checkedBigNumberify(\"./index.rsh:63:21:application\", stdlib.UInt_max, \"0\")];\n    const v681 = v6801[stdlib.checkedBigNumberify(\"./index.rsh:63:21:application\", stdlib.UInt_max, \"0\")];\n    ;\n    ;\n    return;\n}\n;\nasync function _Users_whitelist4(ctcTop, interact) {\n    if (typeof ctcTop !== \"object\" || ctcTop._initialize === undefined) {\n        return Promise.reject(new Error(`The backend for _Users_whitelist4 expects to receive a contract as its first argument.`));\n    }\n    if (typeof interact !== \"object\") {\n        return Promise.reject(new Error(`The backend for _Users_whitelist4 expects to receive an interact object as its second argument.`));\n    }\n    const ctc = ctcTop._initialize();\n    const stdlib = ctc.stdlib;\n    const ctc0 = stdlib.T_Null;\n    const ctc1 = stdlib.T_Data({\n        None: ctc0,\n        Some: ctc0\n    });\n    const ctc2 = stdlib.T_Address;\n    const ctc3 = stdlib.T_Token;\n    const ctc4 = stdlib.T_Bool;\n    const ctc5 = stdlib.T_UInt;\n    const ctc6 = stdlib.T_Array(ctc2, stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"5\"));\n    const ctc7 = stdlib.T_Tuple([\n        ctc5,\n        ctc5,\n        ctc4\n    ]);\n    const ctc8 = stdlib.T_Array(ctc7, stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"1\"));\n    const ctc9 = stdlib.T_Tuple([]);\n    const map0_ctc = ctc1;\n    const map0 = stdlib.newMap({\n        ctc: ctc,\n        idx: 0,\n        isAPI: true,\n        ty: map0_ctc\n    });\n    const [v336, v337, v366, v367, v368, v375, v376, v387] = await ctc.getState(stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"4\"), [\n        ctc2,\n        ctc3,\n        ctc4,\n        ctc5,\n        ctc6,\n        ctc8,\n        ctc5,\n        ctc5\n    ]);\n    const v389 = ctc.selfAddress();\n    const v391 = stdlib.protect(ctc9, await interact.in(), {\n        at: \"./index.rsh:1:23:application\",\n        fs: [\n            \"at ./index.rsh:36:10:application call to [unknown function] (defined at: ./index.rsh:36:10:function exp)\",\n            \"at ./index.rsh:36:10:application call to [unknown function] (defined at: ./index.rsh:36:10:function exp)\"\n        ],\n        msg: \"in\",\n        who: \"Users_whitelist\"\n    });\n    const v393 = stdlib.protect(map0_ctc, await stdlib.mapRef(map0, v389), null);\n    let v394;\n    switch(v393[0]){\n        case \"None\":\n            {\n                const v395 = v393[1];\n                v394 = false;\n                break;\n            }\n        case \"Some\":\n            {\n                const v396 = v393[1];\n                v394 = true;\n                break;\n            }\n    }\n    const v397 = v394 ? false : true;\n    stdlib.assert(v397, {\n        at: \"reach standard library:57:5:application\",\n        fs: [\n            'at ./index.rsh:37:14:application call to \"check\" (defined at: reach standard library:49:32:function exp)',\n            \"at ./index.rsh:36:10:application call to [unknown function] (defined at: ./index.rsh:36:10:function exp)\",\n            \"at ./index.rsh:36:10:application call to [unknown function] (defined at: ./index.rsh:36:10:function exp)\",\n            \"at ./index.rsh:36:10:application call to [unknown function] (defined at: ./index.rsh:36:10:function exp)\"\n        ],\n        msg: \"Already a member\",\n        who: \"Users_whitelist\"\n    });\n    const txn13 = await ctc.sendrecv({\n        args: [\n            v336,\n            v337,\n            v366,\n            v367,\n            v368,\n            v375,\n            v376,\n            v387,\n            v391\n        ],\n        evt_cnt: 1,\n        funcNum: 3,\n        lct: stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"0\"),\n        onlyIf: true,\n        out_tys: [\n            ctc9\n        ],\n        pay: [\n            stdlib.checkedBigNumberify(\"./index.rsh:40:13:decimal\", stdlib.UInt_max, \"0\"),\n            []\n        ],\n        sim_p: async (txn1)=>{\n            const sim_r = {\n                txns: [],\n                mapRefs: [],\n                maps: []\n            };\n            let sim_txn_ctr = stdlib.UInt_max;\n            const getSimTokCtr = ()=>{\n                sim_txn_ctr = sim_txn_ctr.sub(1);\n                return sim_txn_ctr;\n            };\n            stdlib.simMapDupe(sim_r, 0, map0);\n            const { data: [v401] , secs: v403 , time: v402 , didSend: v144 , from: v400  } = txn1;\n            sim_r.txns.push({\n                kind: \"api\",\n                who: \"Users_whitelist\"\n            });\n            ;\n            const v405 = await txn1.getOutput(\"Users_whitelist\", \"v367\", ctc5, v367);\n            await stdlib.simMapSet(sim_r, 0, v400, null);\n            const v412 = stdlib.Array_set(v368, v367, v400);\n            const v413 = stdlib.add(v367, stdlib.checkedBigNumberify(\"./index.rsh:47:36:decimal\", stdlib.UInt_max, \"1\"));\n            const v682 = v366;\n            const v683 = v413;\n            const v684 = v412;\n            const v686 = v375;\n            const v687 = v376;\n            const v688 = stdlib.lt(v413, stdlib.checkedBigNumberify(\"./index.rsh:32:33:decimal\", stdlib.UInt_max, \"4\"));\n            const v689 = v366 ? v688 : false;\n            if (v689) {\n                const v690 = stdlib.add(v402, stdlib.checkedBigNumberify(\"./index.rsh:50:27:decimal\", stdlib.UInt_max, \"2500\"));\n                sim_r.isHalt = false;\n            } else {\n                const v691 = v375[stdlib.checkedBigNumberify(\"./index.rsh:55:24:application\", stdlib.UInt_max, \"0\")];\n                const v692 = v691[stdlib.checkedBigNumberify(\"./index.rsh:55:24:application\", stdlib.UInt_max, \"0\")];\n                const v693 = stdlib.div(v692, stdlib.checkedBigNumberify(\"./index.rsh:55:34:decimal\", stdlib.UInt_max, \"5\"));\n                const v694 = v412[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"0\")];\n                const v695 = v412[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"1\")];\n                const v696 = v412[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"2\")];\n                const v697 = v412[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"3\")];\n                const v698 = v412[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"4\")];\n                const v699 = stdlib.sub(v692, v693);\n                const v700 = v691[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n                const v701 = v691[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n                const v702 = [\n                    v699,\n                    v700,\n                    v701\n                ];\n                const v703 = stdlib.Array_set(v375, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v702);\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v694,\n                    tok: v337\n                });\n                const v704 = v703[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v705 = v704[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v706 = stdlib.sub(v705, v693);\n                const v707 = v704[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n                const v708 = v704[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n                const v709 = [\n                    v706,\n                    v707,\n                    v708\n                ];\n                const v710 = stdlib.Array_set(v703, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v709);\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v695,\n                    tok: v337\n                });\n                const v711 = v710[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v712 = v711[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v713 = stdlib.sub(v712, v693);\n                const v714 = v711[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n                const v715 = v711[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n                const v716 = [\n                    v713,\n                    v714,\n                    v715\n                ];\n                const v717 = stdlib.Array_set(v710, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v716);\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v696,\n                    tok: v337\n                });\n                const v718 = v717[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v719 = v718[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v720 = stdlib.sub(v719, v693);\n                const v721 = v718[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n                const v722 = v718[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n                const v723 = [\n                    v720,\n                    v721,\n                    v722\n                ];\n                const v724 = stdlib.Array_set(v717, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v723);\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v697,\n                    tok: v337\n                });\n                const v725 = v724[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v726 = v725[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n                const v727 = stdlib.sub(v726, v693);\n                const v728 = v725[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n                const v729 = v725[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n                const v730 = [\n                    v727,\n                    v728,\n                    v729\n                ];\n                const v731 = stdlib.Array_set(v724, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v730);\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v698,\n                    tok: v337\n                });\n                const v732 = v731[stdlib.checkedBigNumberify(\"./index.rsh:63:21:application\", stdlib.UInt_max, \"0\")];\n                const v733 = v732[stdlib.checkedBigNumberify(\"./index.rsh:63:21:application\", stdlib.UInt_max, \"0\")];\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v336,\n                    tok: v337\n                });\n                sim_r.txns.push({\n                    kind: \"from\",\n                    to: v336,\n                    tok: undefined /* Nothing */ \n                });\n                sim_r.txns.push({\n                    kind: \"halt\",\n                    tok: v337\n                });\n                sim_r.txns.push({\n                    kind: \"halt\",\n                    tok: undefined /* Nothing */ \n                });\n                sim_r.isHalt = true;\n            }\n            return sim_r;\n        },\n        soloSend: false,\n        timeoutAt: undefined /* mto */ ,\n        tys: [\n            ctc2,\n            ctc3,\n            ctc4,\n            ctc5,\n            ctc6,\n            ctc8,\n            ctc5,\n            ctc5,\n            ctc9\n        ],\n        waitIfNotPresent: false\n    });\n    const { data: [v401] , secs: v403 , time: v4021 , didSend: v144 , from: v4001  } = txn13;\n    undefined /* setApiDetails */ ;\n    ;\n    const v405 = await txn13.getOutput(\"Users_whitelist\", \"v367\", ctc5, v367);\n    if (v144) {\n        stdlib.protect(ctc0, await interact.out(v401, v405), {\n            at: \"./index.rsh:35:7:application\",\n            fs: [\n                \"at ./index.rsh:35:7:application call to [unknown function] (defined at: ./index.rsh:35:7:function exp)\",\n                'at ./index.rsh:42:10:application call to \"k\" (defined at: ./index.rsh:41:11:function exp)',\n                \"at ./index.rsh:41:11:application call to [unknown function] (defined at: ./index.rsh:41:11:function exp)\"\n            ],\n            msg: \"out\",\n            who: \"Users_whitelist\"\n        });\n    } else {}\n    await stdlib.mapSet(map0, v4001, null);\n    const v4121 = stdlib.Array_set(v368, v367, v4001);\n    const v4131 = stdlib.add(v367, stdlib.checkedBigNumberify(\"./index.rsh:47:36:decimal\", stdlib.UInt_max, \"1\"));\n    const v682 = v366;\n    const v683 = v4131;\n    const v684 = v4121;\n    const v686 = v375;\n    const v687 = v376;\n    const v6881 = stdlib.lt(v4131, stdlib.checkedBigNumberify(\"./index.rsh:32:33:decimal\", stdlib.UInt_max, \"4\"));\n    const v6891 = v366 ? v6881 : false;\n    if (v6891) {\n        const v690 = stdlib.add(v4021, stdlib.checkedBigNumberify(\"./index.rsh:50:27:decimal\", stdlib.UInt_max, \"2500\"));\n        return;\n    } else {\n        const v691 = v375[stdlib.checkedBigNumberify(\"./index.rsh:55:24:application\", stdlib.UInt_max, \"0\")];\n        const v692 = v691[stdlib.checkedBigNumberify(\"./index.rsh:55:24:application\", stdlib.UInt_max, \"0\")];\n        const v693 = stdlib.div(v692, stdlib.checkedBigNumberify(\"./index.rsh:55:34:decimal\", stdlib.UInt_max, \"5\"));\n        const v694 = v4121[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"0\")];\n        const v695 = v4121[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"1\")];\n        const v696 = v4121[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"2\")];\n        const v697 = v4121[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"3\")];\n        const v698 = v4121[stdlib.checkedBigNumberify(\"reach standard library:112:21:application\", stdlib.UInt_max, \"4\")];\n        const v699 = stdlib.sub(v692, v693);\n        const v700 = v691[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n        const v701 = v691[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n        const v702 = [\n            v699,\n            v700,\n            v701\n        ];\n        const v703 = stdlib.Array_set(v375, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v702);\n        ;\n        const v704 = v703[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n        const v705 = v704[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n        const v706 = stdlib.sub(v705, v693);\n        const v707 = v704[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n        const v708 = v704[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n        const v709 = [\n            v706,\n            v707,\n            v708\n        ];\n        const v710 = stdlib.Array_set(v703, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v709);\n        ;\n        const v711 = v710[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n        const v712 = v711[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n        const v713 = stdlib.sub(v712, v693);\n        const v714 = v711[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n        const v715 = v711[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n        const v716 = [\n            v713,\n            v714,\n            v715\n        ];\n        const v717 = stdlib.Array_set(v710, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v716);\n        ;\n        const v718 = v717[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n        const v719 = v718[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n        const v720 = stdlib.sub(v719, v693);\n        const v721 = v718[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n        const v722 = v718[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n        const v723 = [\n            v720,\n            v721,\n            v722\n        ];\n        const v724 = stdlib.Array_set(v717, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v723);\n        ;\n        const v725 = v724[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n        const v726 = v725[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\")];\n        const v727 = stdlib.sub(v726, v693);\n        const v728 = v725[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"1\")];\n        const v729 = v725[stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"2\")];\n        const v730 = [\n            v727,\n            v728,\n            v729\n        ];\n        const v731 = stdlib.Array_set(v724, stdlib.checkedBigNumberify(\"./index.rsh:58:33:application\", stdlib.UInt_max, \"0\"), v730);\n        ;\n        const v732 = v731[stdlib.checkedBigNumberify(\"./index.rsh:63:21:application\", stdlib.UInt_max, \"0\")];\n        const v733 = v732[stdlib.checkedBigNumberify(\"./index.rsh:63:21:application\", stdlib.UInt_max, \"0\")];\n        ;\n        ;\n        return;\n    }\n}\n;\nasync function Users_contractOver(ctcTop, interact) {\n    if (typeof ctcTop !== \"object\" || ctcTop._initialize === undefined) {\n        return Promise.reject(new Error(`The backend for Users_contractOver expects to receive a contract as its first argument.`));\n    }\n    if (typeof interact !== \"object\") {\n        return Promise.reject(new Error(`The backend for Users_contractOver expects to receive an interact object as its second argument.`));\n    }\n    const ctc = ctcTop._initialize();\n    const stdlib = ctc.stdlib;\n    const step = await ctc.getCurrentStep();\n    if (step == 4) {\n        return _Users_contractOver4(ctcTop, interact);\n    }\n    throw stdlib.apiStateMismatchError({\n        _stateSourceMap\n    }, [\n        stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"4\")\n    ], stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, step));\n}\n;\nasync function Users_whitelist(ctcTop, interact) {\n    if (typeof ctcTop !== \"object\" || ctcTop._initialize === undefined) {\n        return Promise.reject(new Error(`The backend for Users_whitelist expects to receive a contract as its first argument.`));\n    }\n    if (typeof interact !== \"object\") {\n        return Promise.reject(new Error(`The backend for Users_whitelist expects to receive an interact object as its second argument.`));\n    }\n    const ctc = ctcTop._initialize();\n    const stdlib = ctc.stdlib;\n    const step = await ctc.getCurrentStep();\n    if (step == 4) {\n        return _Users_whitelist4(ctcTop, interact);\n    }\n    throw stdlib.apiStateMismatchError({\n        _stateSourceMap\n    }, [\n        stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, \"4\")\n    ], stdlib.checkedBigNumberify(\"<builtin>\", stdlib.UInt_max, step));\n}\n;\nconst _ALGO = {\n    ABI: {\n        impure: [\n            `Users_contractOver()byte`,\n            `Users_whitelist()uint64`\n        ],\n        pure: [],\n        sigs: [\n            `Users_contractOver()byte`,\n            `Users_whitelist()uint64`\n        ]\n    },\n    appApproval: `BiAMAAEEIAjlvcvOBgPqASniAaCNBgUmAwEAAAEBIjUAMRhBBEEpZEkiWzUBIQRbNQIxGSMSQQAIMQAoKGZCBA82GgAXSUEAISI1BCM1BkkhBQxAAAghBRJEKUIAKYGf6IiwBRJEKUIAfzYaAhc1BDYaAzYaARdJIQYMQAD2SSQMQABkJBJEJDQBEkQ0BEkiEkw0AhIRRChkKmRQNQNJNQU1/4AE1OAYLTT/ULAyBjQDIQdbD0SACQAAAAAAAAGmALAoNQc0A1cAIDQDJVsiNAMhCFs0A1cxoDIGNANX0RE0AyEJW0IBjEgkNAESRDQESSISTDQCEhFEKGQqZFBJNQMhCFs1/0k1BTX+gATImg+7NP5QsDIGNAMhB1sMRIAIAAAAAAAAAW80/xZQsDT/FjUHMQAoKmY0A1cAIDQDJVs0A1coARc0/yMINANXMaBJIiU0/wtSMQBQTCVJNP8LCIGgAVJQMgY0A1fRETQDIQlbQgEASSMMQAB1IxJEIzQBEkQ0BEkiEkw0AhIRRChkSTUDSUpXACA1/yVbNf6BKFs1/VcwETX8gASai5F0sDT8VwARNfs0/TT+iALhNP8xABJENP80/iMiNP9JUDT/UDT/UDT/UDIGNPsiWzT9CBY0+1cICFA0+1cQAVAiQgCFSCEKiAKQIjQBEkQ0BEkiEkw0AhIRREk1BUkiWzX/IQRbNf6ABKzRH8M0/xZQNP4WULCBEa9JNf1XABE1/CEErzT8VwgIUDT8VxABUDX7IQqIAkOxIrIBIrISJLIQMgqyFDT/shGzMQA0/xZQNP4WUDT7UChLAVcAQWdIIzUBMgY1AkIBvzX/Nf41/TX8Nfs1+jX5Nfg0+jT7JAwQQQBANP2BxBMINfc0+DT5FlA0+hZRBwhQNPsWUDT8UDT+UDT/FlA09xZQKEsBVwB/ZypLAVd/c2dIJDUBMgY1AkIBZTT+VwARSTX3IltJNfYhCwo19TT2NPUJFjT3VwgIUDT3VxABUDX0sSKyATT1shIkshA0/FcAILIUNPmyEbM09FcAEUk18yJbNPUJFjTzVwgIUDTzVxABUDXysSKyATT1shIkshA0/FcgILIUNPmyEbM08lcAEUk18SJbNPUJFjTxVwgIUDTxVxABUDXwsSKyATT1shIkshA0/FdAILIUNPmyEbM08FcAEUk17yJbNPUJFjTvVwgIUDTvVxABUDXusSKyATT1shIkshA0/FdgILIUNPmyEbM07lcAETXtsSKyATT1shIkshA0/FeAILIUNPmyEbOxIrIBNO0iWzT1CRY07VcICFA07VcQAVBXABEiW7ISJLIQNPiyFDT5shGzsSKyATT/sggjshA0+LIHs7EisgEishIkshAyCbIVMgqyFDT5shGzQgAAMRkhCxJEsSKyASKyCCOyEDIJsgkyCrIHs0IABTEZIhJEKTQBFjQCFlBnNAZBAAqABBUffHU0B1CwNABJIwgyBBJEMRYSRCNDMRkiEkRC/98iMTQSRCEGMTUSRCIxNhJEIzE3EkQiNQEiNQJC/640AElKIwg1ADgHMgoSRDgQIxJEOAgSRIk0AElKSSMINQA4FDIKEkQ4ECQSRDgRTwISRDgSEkSJ`,\n    appClear: `Bg==`,\n    companionInfo: null,\n    extraPages: 0,\n    mapDataKeys: 1,\n    mapDataSize: 1,\n    stateKeys: 2,\n    stateSize: 242,\n    unsupported: [],\n    version: 10,\n    warnings: [\n        `API api_Users_contractOver may use up to 6 accounts, but the limit is 4. API api_Users_contractOver starts at /app/index.rsh:51:7:application.`,\n        `API api_Users_whitelist may use up to 6 accounts, but the limit is 4. API api_Users_whitelist starts at /app/index.rsh:30:55:application.`,\n        `Step 1 may use up to 6 accounts, but the limit is 4. Step 1 starts at /app/index.rsh:23:5:dot.`,\n        `Step 3 may use up to 6 accounts, but the limit is 4. Step 3 starts at /app/index.rsh:30:55:dot.`,\n        `Step 4 may use up to 6 accounts, but the limit is 4. Step 4 starts at /app/index.rsh:51:7:dot.`,\n        `This program was compiled with trustworthy maps, but maps are not trustworthy on Algorand, because they are represented with local state. A user can delete their local state at any time, by sending a ClearState transaction. The only way to use local state properly on Algorand is to ensure that a user doing this can only 'hurt' themselves and not the entire system.`\n    ]\n};\nconst _ETH = {\n    ABI: `[\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v337\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T4\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T5\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"_who\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v337\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v338\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T4\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T5\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"_who\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"_who\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v401\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T14\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T15\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e3\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"_who\",\n        \"type\": \"address\"\n      },\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v419\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"v0\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reach_oe_v367\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"v0\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"_reach_oe_v422\",\n    \"type\": \"event\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"Users_contractOver\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"Users_whitelist\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCreationTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentState\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"addr\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_reachMap0Ref\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"enum _enum_T0\",\n            \"name\": \"which\",\n            \"type\": \"uint8\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"_None\",\n            \"type\": \"bool\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"_Some\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T0\",\n        \"name\": \"res\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v401\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T14\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T15\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m3\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v419\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T17\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n    Bytecode: ``,\n    BytecodeLen: 8618,\n    Which: `oD`,\n    version: 7,\n    views: {}\n};\nconst _stateSourceMap = {\n    1: {\n        at: \"./index.rsh:22:3:after expr stmt\",\n        fs: [],\n        msg: null,\n        who: \"Module\"\n    },\n    3: {\n        at: \"./index.rsh:65:11:after expr stmt semicolon\",\n        fs: [],\n        msg: null,\n        who: \"Module\"\n    },\n    4: {\n        at: \"./index.rsh:30:55:after expr stmt semicolon\",\n        fs: [],\n        msg: null,\n        who: \"Module\"\n    }\n};\nconst _Connectors = {\n    ALGO: _ALGO,\n    ETH: _ETH\n};\nconst _Participants = {\n    \"Deployer\": Deployer,\n    \"Users_contractOver\": Users_contractOver,\n    \"Users_whitelist\": Users_whitelist\n};\nconst _APIs = {\n    Users: {\n        contractOver: Users_contractOver,\n        whitelist: Users_whitelist\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./build/index.main.mjs\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/index.tsx"));
module.exports = __webpack_exports__;

})();